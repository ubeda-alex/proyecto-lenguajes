# NOTA:
# - La pila se muestra como [fondo ... tope]; el tope está a la DERECHA.
# - La memoria es un diccionario {nombre: valor}.
# - Las líneas que empiezan con '#' son comentarios y tu lector debe ignorarlas.

0  LOAD_GLOBAL    print         # pila: [] -> ['<func print>']
# pila: [<print>]; mem: {}
1  LOAD_CONST 7                 # pila: [<print>] -> [<print>, 7]
2  LOAD_CONST 3                 # pila: [<print>, 7] -> [<print>, 7, 3]
3  BINARY_ADD                   # 7+3=10; pila -> [<print>, 10]
4  LOAD_CONST 2.0               # pila -> [<print>, 10, 2]
5  BINARY_MULTIPLY              # 10*2.0=20; pila -> [<print>, 20]
6  LOAD_CONST 8                 # pila -> [<print>, 20, 8]
7  BINARY_SUBSTRACT             # 20-8=12; pila -> [<print>, 12]
8  LOAD_CONST 5                 # pila -> [<print>, 12, 5]
9  LOAD_CONST 3                 # pila -> [<print>, 12, 5, 3]
10 BINARY_MODULO                # 5%3=2; pila -> [<print>, 12, 2]
11 BINARY_DIVIDE                # 12/2=6; pila -> [<print>, 6]
12 CALL_FUNCTION 1              # imprime 6; pila -> []
# Esperado: 6 o 6.0
